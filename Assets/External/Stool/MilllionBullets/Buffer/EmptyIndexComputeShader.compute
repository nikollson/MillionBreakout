#pragma kernel PopIndices
#pragma kernel Update

struct State
{
	float3 Pos;
	int Enable;
	int IsDead;
};



int N;
AppendStructuredBuffer<int> AppendQueue;
ConsumeStructuredBuffer<int> ConsumeQueue;
RWStructuredBuffer<int> PushQueueCounter;
RWStructuredBuffer<int> InoutBuffer;
RWStructuredBuffer<State> States;

[numthreads(8, 1, 1)]
void PopIndices(uint3 id : SV_DispatchThreadID)
{
	if (id.x >= (uint)N)return;
	InoutBuffer[id.x] = ConsumeQueue.Consume();
}

[numthreads(8, 1, 1)]
void Update(uint3 id : SV_DispatchThreadID, uint3 threadID : SV_GroupThreadID)
{
	if (States[id.x].IsDead && States[id.x].Enable)
	{
		States[id.x].Enable = 0;
		PushQueueCounter[threadID.x] += 1;
		AppendQueue.Append(id.x);
	}
}